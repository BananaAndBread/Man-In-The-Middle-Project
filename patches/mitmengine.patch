diff --git a/reference_fingerprints/fingerprint_metadata.jsonl b/reference_fingerprints/fingerprint_metadata.jsonl
index d6bd5c9..3dddd2e 100644
--- a/reference_fingerprints/fingerprint_metadata.jsonl
+++ b/reference_fingerprints/fingerprint_metadata.jsonl
@@ -1242,3 +1242,4 @@
 {"desc": "computer-OS_X-El_Capitan-firefox-18.0", "comment": "generated by scripts/filename_to_metadata.py", "handshake_pcap": "reference_fingerprints/pcaps/browsers/computer-OS_X-El_Capitan-firefox-18.0/handshake.pcap", "ua_fingerprint": {"browser": "Firefox", "browser_version": "18.0", "os": "MacOSX", "os_version": "10.11.0", "platform": "Mac", "device": "Computer"}}
 {"desc": "computer-Windows-8.1-firefox-32.0", "comment": "generated by scripts/filename_to_metadata.py", "handshake_pcap": "reference_fingerprints/pcaps/browsers/computer-Windows-8.1-firefox-32.0/handshake.pcap", "ua_fingerprint": {"browser": "Firefox", "browser_version": "32.0", "os": "Windows", "os_version": "6.3.0", "platform": "Windows", "device": "Computer"}}
 {"desc": "gnutls-2.12.23", "comment": "generated by scripts/filename_to_metadata.py", "handshake_pcap": "reference_fingerprints/pcaps/gnutls/gnutls-2.12.23/handshake.pcap"}
+{"desc": "---asdf---", "comment": "hahahahahhahahahahah", "hanshake_pcap": "reference_fingerprints/pcaps/asdf/handshake.pcap", "header_json": "reference_fingerprints/pcaps/asdf/header.json"}
diff --git a/reference_fingerprints/mitmengine/browser.txt b/reference_fingerprints/mitmengine/browser.txt
index 31d8c6c..20e68d6 100644
--- a/reference_fingerprints/mitmengine/browser.txt
+++ b/reference_fingerprints/mitmengine/browser.txt
@@ -1,6 +1,8 @@
 # This set pulls from the set of fingerprints in reference_fingerprints/pcaps, as well as the 500 most common User Agent/TLS Client Hello pairs
 # that Cloudflare labels as "trusted traffic" using internal metrics.
 # <browser_name>:<browser_version>:<os_platform>:<os_name>:<os_version>:<device_type>:<quirks>|<tls_version>:<cipher_suites>:<extension_names>:<curves>:<ec_point_fmts>:<http_headers>:<quirks>|<mitm_name>:<mitm_type>:<mitm_grade>
+4:68.0.0:3:10:0.0.0:1:|303:1301,1303,1302,c02b,c02f,cca9,cca8,c02c,c030,c00a,c009,c013,c014,33,39,2f,35,a:0,17,ff01,a,b,23,10,5,33,2b,d,2d,1c,15:1d,17,18,19,100,101:0::|:0:0
+1:72.0.3626:2:3:10.14.3:1:|303:1301,1303,1302,c02b,c02f,cca9,cca8,c02c,c030,c00a,c009,c013,c014,33,39,2f,35,a:0,17,ff01,a,b,23,10,5,33,2b,d,2d,1c,15::::|:0:0
 1:56-72:1:2:10:1:|303:~a,2f,35,9c,9d,?1301,?1302,?1303,c013,c014,c02b,c02c,c02f,c030,?cc13,?cc14,cca8,cca9:~0,5,a,b,d,?10,12,?15,17,?1b,23,?29,?2b,?2d,?33,?7550,ff01:1d,17,18:0:*:grease|:0:0
 4:60-65:1:2:10:1:|303:1301,1303,1302,c02b,c02f,cca9,cca8,c02c,c030,?c00a,?c009,c013,c014,?33,?39,2f,35,a:0,17,ff01,a,b,?23,10,5,33,?2a,2b,d,2d,?1c,?15,?29:1d,17,18,19,100,101:0:*:|:0:0
 2:11:1:2:6:1:|303:~?4,?5,a,13,2f,32,?33,35,38,?39,3c,3d,40,6a,?9c,?9d,?9e,?9f,c009,c00a,c013,c014,c023,c024,c027,?c028,c02b,c02c:~0,?5,a,b,d,?10,?17,?23,?3374,ff01:17,18:0:*:|:0:0
diff --git a/scripts/filename_to_fingerprint.py b/scripts/filename_to_fingerprint.py
index 89d560f..8540824 100755
--- a/scripts/filename_to_fingerprint.py
+++ b/scripts/filename_to_fingerprint.py
@@ -264,55 +264,55 @@ class RequestFingerprint:
 
     def parse(self, filename):
         self.clear()
-        pdml = subprocess.run(["tshark", "-r", filename, "-T", "pdml"], capture_output=True, encoding='utf-8').stdout
+        pdml = subprocess.run(["tshark", "-r", filename, "-T", "pdml"], stdout=subprocess.PIPE, stderr=subprocess.PIPE, encoding='utf-8').stdout
         # tshark may omit closing tag on incomplete pcaps
         if '</pdml>' not in pdml:
             pdml += '</pdml>'
-        root = etree.fromstring(pdml)
+        root = etree.fromstring(pdml.encode('utf-8'))
         for pkt in root:
             for proto in pkt:
-                if proto.get("name") != "ssl":
+                if proto.get("name") != "tls":  # modified for tls
                     continue
                 # TODO: skip SSLv2 records
                 for field0 in proto:
-                    if field0.get("name") != "ssl.record":
+                    if field0.get("name") != "tls.record":  # modified for tls
                         continue
                     # only want the final client hello, so clear fields 
                     self.clear()
                     # parse record version
                     for field1 in field0:
-                        if field1.get("name") == "ssl.record.version":
+                        if field1.get("name") == "tls.record.version":
                             self.record_tls_version = field1.get("value")
                     # parse record
                     for field1 in field0:
                         # check record type
-                        if field1.get("name") != "ssl.handshake":
+                        if field1.get("name") != "tls.handshake":
                             continue
                         # check handshake type
                         is_client_hello = False
                         for field2 in field1:
-                            if field2.get("name") == "ssl.handshake.type" and field2.get("value") == "01":
+                            if field2.get("name") == "tls.handshake.type" and field2.get("value") == "01":
                                 is_client_hello = True
                         if not is_client_hello:
                             continue
                         # parse version
                         for field2 in field1:
-                            if field2.get("name") == "ssl.handshake.version":
+                            if field2.get("name") == "tls.handshake.version":
                                 self.tls_version = field2.get("value")
                         # parse ciphersuites
                         for field2 in field1:
-                            if field2.get("name") != "ssl.handshake.ciphersuites":
+                            if field2.get("name") != "tls.handshake.ciphersuites":
                                 continue
                             for field3 in field2:
-                                if field3.get("name") != "ssl.handshake.ciphersuite":
+                                if field3.get("name") != "tls.handshake.ciphersuite":
                                     continue # unexpected
                                 self.ciphersuites.append(field3.get("value"))
                         # parse compression methods
                         for field2 in field1:
-                            if field2.get("name") != "ssl.handshake.comp_methods":
+                            if field2.get("name") != "tls.handshake.comp_methods":
                                 continue
                             for field3 in field2:
-                                if field3.get("name") != "ssl.handshake.comp_method":
+                                if field3.get("name") != "tls.handshake.comp_method":
                                     continue # unexpected
                                 self.compression_methods.append(field3.get("value"))
                         # parse extensions 
@@ -323,7 +323,7 @@ class RequestFingerprint:
                                 is_ec_point_formats = False
                                 is_signature_algorithms = False
                                 for field3 in field2:
-                                    if field3.get("name") == "ssl.handshake.extension.type":
+                                    if field3.get("name") == "tls.handshake.extension.type":
                                         if field3.get("value") == "000a":
                                             is_elliptic_curves = True
                                         if field3.get("value") == "000b":
@@ -333,26 +333,26 @@ class RequestFingerprint:
                                         self.extensions.append(field3.get("value"))
                                 if is_elliptic_curves:
                                     for field3 in field2:
-                                        if field3.get("name") != "ssl.handshake.extensions_elliptic_curves":
+                                        if field3.get("name") != "tls.handshake.extensions_elliptic_curves":
                                             continue
                                         for field4 in field3:
-                                            if field4.get("name") != "ssl.handshake.extensions_elliptic_curve":
+                                            if field4.get("name") != "tls.handshake.extensions_elliptic_curve":
                                                 continue # unexpected
                                             self.elliptic_curves.append(field4.get("value"))
                                 if is_ec_point_formats:
                                     for field3 in field2:
-                                        if field3.get("name") != "ssl.handshake.extensions_elliptic_curves": # accounting for bug in tshark?
+                                        if field3.get("name") != "tls.handshake.extensions_elliptic_curves": # accounting for bug in tshark?
                                             continue
                                         for field4 in field3:
-                                            if field4.get("name") != "ssl.handshake.extensions_ec_point_format":
+                                            if field4.get("name") != "tls.handshake.extensions_ec_point_format":
                                                 continue # unexpected
                                             self.ec_point_formats.append(field4.get("value"))
                                 if is_signature_algorithms:
                                     for field3 in field2:
-                                        if field3.get("name") != "ssl.handshake.extensions_signature_algorithms":
+                                        if field3.get("name") != "tls.handshake.extensions_signature_algorithms":
                                             continue
                                         for field4 in field3:
-                                            if field4.get("name") != "ssl.handshake.extensions_signature_algorithm":
+                                            if field4.get("name") != "tls.handshake.extensions_signature_algorithm":
                                                 continue # unexpected
                                             self.signature_algorithms.append(field4.get("value"))
                         self.parsed = True
@@ -415,6 +415,7 @@ if __name__ == "__main__":
     # parse request fingerprint from pcap
     req_fp.parse(args.filename)
     if not req_fp.parsed:
+        print('lol')  # TODO: remove
         sys.exit(1)
 
     full_fp = "{ua}|{req}|{mitm}".format(ua=ua_fp,req=req_fp,mitm=mitm_fp)
diff --git a/scripts/pcap_to_request_fingerprint.py b/scripts/pcap_to_request_fingerprint.py
index 567d180..6d00c4d 100755
--- a/scripts/pcap_to_request_fingerprint.py
+++ b/scripts/pcap_to_request_fingerprint.py
@@ -39,7 +39,7 @@ class RequestFingerprint:
             "-e", "tls.handshake.extension.type",
             "-e", "tls.handshake.extensions_supported_group",
             "-e", "tls.handshake.extensions_ec_point_format",
-            "-e", "tls.handshake.sig_hash_alg"], capture_output=True, encoding='utf-8')
+            "-e", "tls.handshake.sig_hash_alg"], stdout=subprocess.PIPE, stdin=subprocess.PIPE, encoding='utf-8')
 
         if tshark.returncode != 0:
             print(tshark.stderr)